---
title: "Trial"
format: html
editor: visual
---

## Quarto

Reading data

```{r}
library(tidyverse)
library(lubridate)
#install.packages("tidytuesdayR")
```

```{r}



# Get the Data

brewing_materials <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/brewing_materials.csv')

beer_taxed <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/beer_taxed.csv')
brewer_size <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/brewer_size.csv')
beer_states <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/beer_states.csv')

# Or read in with tidytuesdayR package (https://github.com/thebioengineer/tidytuesdayR)
# PLEASE NOTE TO USE 2020 DATA YOU NEED TO USE tidytuesdayR version ? from GitHub

# Either ISO-8601 date or year/week works!

# Install via devtools::install_github("thebioengineer/tidytuesdayR")

tuesdata <- tidytuesdayR::tt_load('2020-03-31')
tuesdata <- tidytuesdayR::tt_load(2020, week = 14)


brewing_materials <- tuesdata$brewing_materials

brewing_materials %>%
  mutate(date=ymd(paste(year,month,1)))
  
```

\- Types of ingredients and quantities used in beer production over time

. Using the brewing materials dataset, I will make a barplot (geom_col) for type and month_current variables, and fill using material_type. I will filter out anything that says total to exclude the totals and only keep individual values.




- Relationship between total barrels produced and brewery size
.Since brewery size is not a definite number, I can't do correlation analysis, I will just do visualize the data as is.
.

From the brewer size dataset, I will create a graph showing the barrel number and brew size
. Potentially look at where the beer is produced (might require a map)




- Number of barrels consumed on premises vs barrels that end up in bottles&cans over time
. Group by states and year
. Calculate the percentage of barrels consumed (barrels/sum(barrels))
. filter those consumed only on premises and then in botles/cans
. make a map that sorts colors based on percentages




-

Number of barrels that are tax free and exported (Actually I can look at percent change since I have values for current and prior year)
. Filter out barrels that are tax free (from tax status column) and for export(in type column)
. Calculate the percent change ((current year value-prior year value)/prior year value)\*100
.Create a graph that shows change over the years


```{r}
#Question1
head(brewing_materials)

brewing_materials%>% 
  filter(!str_detect(material_type,"Total")) %>% 
  mutate(type=fct_reorder(type,month_current)) %>% 
  ggplot(aes(type,month_current,fill=material_type))+geom_col()+coord_flip()

#Material Used
brewing_materials %>%
  filter(!str_detect(material_type,"Total")) %>% 
  mutate(type=fct_reorder(type,month_current, sum)) %>% 
  ggplot(aes(date,month_current,fill=type))+geom_col()+
  scale_y_continuous(labels=scales::comma) +
  labs(x="Time",y="Pounds used in beer production",fill="Material Used")

#Grain or No Grain
brewing_materials %>%
  filter(str_detect(material_type,"Total.*products")) %>% 
  mutate(type=fct_reorder(type,month_current, sum)) %>% 
  ggplot(aes(date,month_current,fill=type))+geom_col()+
  scale_y_continuous(labels=scales::comma) +
  labs(x="Time",y="Pounds used in beer production",fill="Material Used")






```

The `echo: false` option disables the printing of code (only output is displayed).
